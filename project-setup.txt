# Web3 Educational Platform Setup Guide

## Project Overview

This platform enables course creators to sell access to their educational content using NFTs as access licenses, with blockchain-based progress tracking and certificate issuance. The platform is built on Manta Network.

## Technology Stack

### Blockchain Components
- **Smart Contracts**: Solidity 0.8.22
- **Network**: Manta Network
- **Token Standards**: ERC-1155 (for both course licenses and certificates)
- **Contract Framework**: OpenZeppelin for security and standards compliance

### Frontend
- **Framework**: React.js with Next.js
- **Web3 Integration**: ethers.js
- **Authentication**: Web3Modal or ConnectKit for wallet connections
- **UI Components**: Tailwind CSS with DaisyUI

### Backend/Storage
- **Content Storage**: IPFS via web3.storage or Pinata
- **Video Hosting**: Livepeer (for decentralized video streaming)
- **Metadata Indexing**: TheGraph (for efficient querying of blockchain data)

## Project Structure

```
/web3-education-platform
  /contracts
    CourseFactory.sol
    CourseLicense.sol
    ProgressTracker.sol
    CertificateManager.sol
    PlatformFactory.sol
  /frontend
    /pages
      /courses
      /dashboard
      /creator
      /certificates
    /components
    /hooks
      useWeb3.js
      useCourses.js
      useProgress.js
    /utils
    /abis
  /subgraph
    schema.graphql
    subgraph.yaml
    /src
      mappings.ts
  /scripts
    deploy.js
    verify.js
  hardhat.config.js
  package.json
  README.md
```

## Setup Instructions

### Prerequisites
- Node.js (v16+)
- Manta Network wallet with test tokens
- Hardhat for contract development and testing

### Contract Deployment

1. Clone the repository and install dependencies:
```bash
git clone <repo-url>
cd web3-education-platform
npm install
```

2. Configure your environment:
Create a `.env` file with:
```
PRIVATE_KEY=your_wallet_private_key
MANTA_RPC_URL=https://manta-rpc-endpoint
```

3. Compile the contracts:
```bash
npx hardhat compile
```

4. Deploy to Manta Network:
```bash
npx hardhat run scripts/deploy.js --network manta
```

5. Verify contracts on Manta Explorer:
```bash
npx hardhat run scripts/verify.js --network manta
```

### TheGraph Setup

1. Initialize a new subgraph:
```bash
graph init --product hosted-service --from-contract [CONTRACT_ADDRESS]
```

2. Configure your subgraph for Manta Network in `subgraph.yaml`

3. Deploy the subgraph:
```bash
graph deploy --product hosted-service [SUBGRAPH_NAME]
```

### Frontend Setup

1. Configure the frontend:
```bash
cd frontend
npm install
```

2. Update contract addresses in `config.js`

3. Run the development server:
```bash
npm run dev
```

## Data Flow and Smart Contract Interaction

### Course Creation Flow
1. Creator connects wallet to platform
2. Creator uploads course materials to IPFS via the platform interface
3. Creator sets course details (title, price, thumbnail)
4. `CourseFactory.createCourse()` is called to register the course on-chain
5. Creator adds sections via `CourseFactory.addCourseSection()`

### License Purchase Flow
1. Student browses available courses
2. Student selects a course and duration (1, 3, or 12 months)
3. Student approves transaction
4. `CourseLicense.mintLicense()` is called, transferring funds and minting NFT
5. Smart contract distributes payment between platform and creator

### Course Consumption Flow
1. Student accesses "My Courses" dashboard
2. Platform verifies license validity via `CourseLicense.hasValidLicense()`
3. Student views course content from IPFS/Livepeer
4. As student completes sections, `ProgressTracker.completeSection()` is called
5. Progress is stored on-chain and indexed by TheGraph for efficient querying

### Certificate Issuance Flow
1. Student completes all course sections
2. `ProgressTracker.isCourseCompleted()` returns true
3. Student can mint a certificate via `CertificateManager.issueCertificate()`
4. Certificate is minted as an NFT with verification metadata
5. Certificate can be verified by anyone via the verification URL/QR code

## Fees and Revenue Structure

- **Course Licenses**: 95% to creator, 5% to platform
- **Certificates**: 80% to creator, 20% to platform

## No Database Required

This architecture is fully decentralized and does not require a traditional database:

- **Course Content**: Stored on IPFS/Livepeer
- **Metadata**: Stored on-chain and indexed by TheGraph
- **User Progress**: Tracked on-chain via the ProgressTracker contract
- **Authentication**: Handled via wallet signatures

## Scaling Considerations

- **Gas Optimization**: Batched transactions for multiple operations
- **Content Delivery**: Use of IPFS gateways for faster content delivery
- **Query Efficiency**: TheGraph for efficient data indexing and retrieval

## Security Considerations

- All contracts use OpenZeppelin's battle-tested libraries
- Access control for sensitive operations
- Limited upgradeability to maintain security
- Time-based license mechanisms to prevent unauthorized access


## Story that platform what i want to make its like this
seorang developer web3 yang sangat ahli dalam bidang web3 buatkan settup nya dan apa saja yang di gunakan karena saya akan mengembangkannya di manta network tnapa menggunakan alchemy menjadi sebuah tutroial full mulai dari setup semua project hingga ke seluruhan kode baik dari frontend backend dan solidity sehingga bisa menjawab seluruh prompt saya ini
project ini berfokus pada sebuah tujuan utama yaitu memberikan people goods di bidang pendidikan dengan memanfaatkan blokchain dan teknologi NFT. Konsep nya seperti ini seorang course maker bisa membuat sebuah nft yang diamana nantinya nft tersebut sebagai sebuah license untuk course yang mereka buat misalnya di sini kita akan menggunakan satu course terlebih dahulu. satu course tersebut akan kita buatkan sebuah NFT dengan harga murah yang akan di tampilkan di website kita dan nantinya dapat di minting oleh orang yang ingin belajar untuk bisa mendapatkan akses ke course tersebut jadi nft nya disini berfungsi sebagai license untuk membuka course yang tertutup. Kemudian ketika  ada yang ingin memiliki akses ke course tersebut maka dia hanya perlu membayar sedikit biaya yang sangat murah hanya sekitar 1 dollar saja dikali lama peminjaman dalam bulan misal minjam 1 bulan maka biaya adalah 1 dollar dikali 1 bulan ditambah gas fee trasaksi yang nantinya akan dikirimkan ke wallet dari si pembuat course. Disitu orang yang ingin belajar dapat memilih untuk berapa lama periode dari nft tersebut tidak dapat di gunakan lagi 1 bulan, 3 bulan atau 12 bulan. NFT di sini akan bertindak sebagai lisensi digital yang memberikan akses khusus terhadap course tersebut yang nantinya akan bisa akses coursenya, jika orang tersebut memiliki akses khusunya yang kita check dari jaringan blockchain.  Kemudian ketika dia ingin mendapatkan sertifikat dari course tersebut dia bisa masuk ke platform kita lagi dan memilih untuk mendapatkan sertifikatnya dengan memilih course nya yang ada di halaman khusus course yang pernah dia enroll kemudian dia bisa mendapatkan sertifikatnya dengan membayar beberapa manta untuk nantinya di buatkan sertifikat yang bersifat NFT khusus tanpa bisa di pecah pecah alias satu orang satu sertifikat dan di simpan di dalam blockchain. Pengajuan sertifikat ini hanya dapat dilakukan jika user telah menyelesaikan coursenya.

Konsep meraih keuntungan.
ketika orang yang ingin belajar melakukan minting dari course yang sudah dibuat oleh pembuat course maka keuntungan akan di bagikan ke pembuat course
Ketika orang yang ingin belajar tersebut membuat sebuah sertifikat maka keuntungan akan di bagikazn ke pembuat course dan ke platform

Hal yang saya rencanakan untuk pembuatan smart contractnya (bila bisa diupgrade maka boleh)

1. Ketika pembuatan course maka smartcontract harus melayani seperti kode dari pembuatan coursenya sebagai induk agar nanti bisa di query di blockchain, nama pembuatnya, judul course nya, thumbnail image, dan wallet dari pembuat coursenya.

2. Ketika kita melakukan pembuatan section coursenya maka untuk setiap section harus di simpan berdasarkan induk dari coursneya agar nanti ketik  di tampilkan maka semua data section percoursenya dapat kita ambil. Nah sebenarnya saya berpikir seperti ini untuk setiap sectionnya juga akan kita simpan di dalam blokcahin dengan cara sama, menyimpan judul sectionnya, id induknya, dan path dari video yang diupload untuk session ini serta satus selesai atau tidak.

Untuk pembahasan satu dua jiaka d yang lebih efesien maka say  tidka menutup kemungkinan untuk di implementasikan.

3. Nah yang kedua adalah smart contract tersebut harus bisa menampilkan daftar daftar dari course  yang sudah pernah di buat oleh course makernya untuk dapat di mint oleh para pembelajar

4. Kemudian smart contract harus bisa melakukan pencatatan dari mulai ketika para pembelajar ini melakukan minting maka smart contract akan mencatat wallet address siapa yang melakukan minting, dia minting ke kode course mana, berapa lama dia melakukan penyewaannya dan kode licensi nya.

5. Pada saat student melakukan minting tersebut maka smart contract juga akan menangani transactionnya yang dimana student akan membayar sebanyak 1 dollar dalam bentuk manta coin atau idrx (ingat kita menggunakan network manta)

6. Nah ketika di  sudah memiliki lisensinya maka dia bisa kehalaman nft yang sudah di mint dan menekan open di nft maka akan di arahkan ke halaman section section tadi dan akan mengambil semua data yang sudah disimpan tadi untuk ditampilkan.

7. Smart contract juga harus bisa mencari dimana dari data transaction tadi yaitu wallet address dari pembelajar tadi yang sudah minting ke coursesnya kan dapet licensi nya itu harus di check ke smart contractnya apakah masih valid atau tidak. Jika tidak maka sudah tidak dapat akses lagi dan pembelajar harus minting lagi maka smart contractnya akan membuatkan yang baru lagia. dan pengecekannya akan ke transaction terbaru dari wallet pembelajar.

8. Smart contract juga harus memiliki fungsi untuk menyimpan data sertifikat, dan pembuatan sertifikat sehingga nantinya sertifikat tadi dapat di scan melalui barcode dan bisa langsung terlihat bahwa sertifikat tersebut asli.

Kita akan menggunakan ERC1155 sebagai nft nya.
Dan saya melakukan pencarian bahwa kit  bisa menggunakan the graph untuk querry data ke blockchain (coba kamu check apakah mungkin)
saya juga menemukan livepeer bisa digunakan untuk menaruh video dari yang kit  upload nantinya (coba kamu check apakah mungkin)
Saya juga menemukana IPFS di therdweb dan login menggunakan therdweb untuk wallet address(jika ad saran lainyang lebih baik okay)
